package java_universitylibrary_db;

import java.awt.Component;
import java.sql.*;
import javax.swing.table.DefaultTableModel;
import java.util.*;
import javax.swing.JFrame;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
/**
 *
 * @author Panagiotis
 */
public class Books extends javax.swing.JInternalFrame {
    private boolean _selectrow = false;
    private String _returnValue ="";
    public void setSelectedButton(boolean Select)
    {
        this.Btselect.setEnabled(Select);
        this.Btselect.setVisible(Select);
        this._selectrow = Select;
    }
    
    public String getSelectValue(){
        return _returnValue;
    }
    


    public Books() {
        initComponents();
        this.Btselect.setEnabled(false);
        this.Btselect.setVisible(false);
        FetchBooksToTable();
        
    }
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Table_Books = new javax.swing.JScrollPane();
        GridBooks = new javax.swing.JTable();
        DeleteButtom = new javax.swing.JButton();
        ButCheng = new javax.swing.JButton();
        ButInsert = new javax.swing.JButton();
        ButFind = new javax.swing.JButton();
        TxtTitle = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        CopiesButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        TxtCategory = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        TxtAuthor = new javax.swing.JTextField();
        Btselect = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Βιβλία");
        setToolTipText("Βιβλία");
        addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                formAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        GridBooks.setAutoCreateRowSorter(true);
        GridBooks.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        Table_Books.setViewportView(GridBooks);

        DeleteButtom.setText("Διαγραφή");
        DeleteButtom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButtomActionPerformed(evt);
            }
        });

        ButCheng.setText("Διόρθωση");
        ButCheng.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButChengActionPerformed(evt);
            }
        });

        ButInsert.setText("Εισαγωγή");
        ButInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButInsertActionPerformed(evt);
            }
        });

        ButFind.setText("Αναζήτηση");
        ButFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButFindActionPerformed(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Τίτλος :");

        CopiesButton.setText("Καταχώριση αντιγράφων");
        CopiesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CopiesButtonActionPerformed(evt);
            }
        });

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Κατηγορία :");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Συγγραφέας :");

        Btselect.setText("Επιλογή");
        Btselect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtselectActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Table_Books, javax.swing.GroupLayout.DEFAULT_SIZE, 655, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ButInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ButCheng)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DeleteButtom)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CopiesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(TxtAuthor, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TxtTitle, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TxtCategory, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ButFind)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Btselect)
                                .addGap(67, 67, 67))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(15, 15, 15)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(TxtTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TxtCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Btselect))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TxtAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(ButFind))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ButInsert)
                    .addComponent(ButCheng)
                    .addComponent(DeleteButtom)
                    .addComponent(CopiesButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Table_Books, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DeleteButtomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtomActionPerformed
        int row = this.GridBooks.getSelectedRow();
        if (row < 0 ){return ;} 
        DefaultTableModel model = (DefaultTableModel) this.GridBooks.getModel();
        BooksUPD upd = new BooksUPD();
        upd.setPKValue( model.getValueAt(row,0).toString());
        upd.setAction(PopUpJpanel.FormActionType.Delete);
        PopUpMondalWindow ppp = new PopUpMondalWindow(this,"Προσθήκη Βιβλίου",upd);
        ppp.setSize(470, 300);
        FetchBooksToTable();
    }//GEN-LAST:event_DeleteButtomActionPerformed

    private void ButChengActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButChengActionPerformed
        int row = this.GridBooks.getSelectedRow();
        if (row < 0 ){return ;} 
        DefaultTableModel model = (DefaultTableModel) this.GridBooks.getModel();
        BooksUPD upd = new BooksUPD();
        upd.setPKValue( model.getValueAt(row,0).toString());
        upd.setAction(PopUpJpanel.FormActionType.Update);
        PopUpMondalWindow ppp = new PopUpMondalWindow(this,"Προσθήκη Βιβλίου",upd);
         ppp.setSize(470, 300);
        FetchBooksToTable();
    }//GEN-LAST:event_ButChengActionPerformed

    private void ButInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButInsertActionPerformed
        BooksUPD upd = new BooksUPD();
        upd.setAction(PopUpJpanel.FormActionType.Insert);
        PopUpMondalWindow ppp = new PopUpMondalWindow(this,"Προσθήκη Βιβλίου",upd);
         ppp.setSize(470, 300);
        FetchBooksToTable();
    }//GEN-LAST:event_ButInsertActionPerformed

    private void ButFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButFindActionPerformed
        FetchBooksToTable();
    }//GEN-LAST:event_ButFindActionPerformed

    private void CopiesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CopiesButtonActionPerformed
        int row = this.GridBooks.getSelectedRow();
        if (row < 0 ){return;} 
        DefaultTableModel model = (DefaultTableModel) this.GridBooks.getModel();
        CopiesBook cb = new CopiesBook();
        cb.setPKValue( model.getValueAt(row,0).toString());
        cb.setAction(PopUpJpanel.FormActionType.Display);
        PopUpMondalWindow ppp = new PopUpMondalWindow(this,"Αντίγραφα",cb);
        ppp.setSize(250, 200);
        FetchBooksToTable();
    }//GEN-LAST:event_CopiesButtonActionPerformed

    private void BtselectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtselectActionPerformed
      try{
        PopUpJInternalFrame.getPopUpJInternalF(this).actionPerformed(evt);
     }
     catch(Exception ex ){
     }
    }//GEN-LAST:event_BtselectActionPerformed

    private void formAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_formAncestorAdded
        if (_selectrow)
        {
            this.ButInsert.setEnabled(false);
            this.ButCheng.setEnabled(false);
            this.DeleteButtom.setEnabled(false);
            this.CopiesButton.setEnabled(false);
        }
        
        
    }//GEN-LAST:event_formAncestorAdded

    private void FetchBooksToTable(){
        java.util.ArrayList<String> ListParam = new java.util.ArrayList<String>();
        String[] ColumnName = new String[]{"ISBN", "Τίτλος Βιβλίου ","Κατηγορία","Συγγραφέας","Αντίγραφα","Διαθέσιμα"};
        String sql = "SELECT BOOKS.ISBN ,BOOKS.TITLE ,\n" +
                    "v_categories.CATEGORY AS CATEGORY,\n" +
                    "v_authors.AUTHORS_NAME ,\n" +
                    "(SELECT count(COPYID) FROM copies WHERE ISBN =BOOKS.ISBN) as copies,\n" +
                    "(SELECT count(COPYID) FROM copies WHERE ISBN =BOOKS.ISBN and FREEFLAG =0) as free\n" +
                    "FROM BOOKS\n" +
                    "LEFT JOIN v_categories ON v_categories.ISBN = BOOKS.ISBN\n" +
                    "LEFT JOIN v_authors  ON v_authors.ISBN = BOOKS.ISBN \n"; 
        if (this.TxtTitle.getText().length()>0)
        {
            if (ListParam.isEmpty()){
                sql +="WHERE UPPER(BOOKS.TITLE) like ?  \n";
            }
            else{
                 sql +="AND UPPER(BOOKS.TITLE) like ?  \n";
            }
            ListParam.add("%"+this.TxtTitle.getText().toUpperCase().trim()+ "%");
        }
                
        if (this.TxtCategory.getText().trim().length()>0)
        {
            if (ListParam.isEmpty()){
                sql +="WHERE UPPER(v_categories.CATEGORY) like ?  \n";
            }
            else{
                 sql +="AND UPPER(v_categories.CATEGORY) like ?  \n";
            }           
            ListParam.add("%"+this.TxtCategory.getText().toUpperCase().trim()+ "%");
        }
                
        if (this.TxtAuthor.getText().length()>0)
        {
            if (ListParam.isEmpty()){
                sql +="WHERE UPPER(v_authors.AUTHORS_NAME) like ?  \n";
            }
            else{
                 sql +="AND UPPER(v_authors.AUTHORS_NAME) like ?  \n";
            }           
            ListParam.add("%"+this.TxtAuthor.getText().toUpperCase().trim()+ "%");
        }
        String[] parameter = null;
        if (ListParam.size() > 0)
        {
            parameter = new String[ListParam.size()];
            for (int i = 0 ; i < ListParam.size(); i++ )
            {
                parameter[i] = ListParam.get(i);
            }
        }
        try{
            this.GridBooks.setModel(ConnectDb.DbDefaultTableModel(ColumnName, sql,parameter ));
            this.GridBooks.setRowSelectionInterval(0,0);
            GridBooks.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
                @Override
                public void valueChanged(ListSelectionEvent event) {
                    if (_selectrow && GridBooks.getSelectedRow() >= 0 )
                    {
                        _returnValue = GridBooks.getValueAt(GridBooks.getSelectedRow(),0).toString();
                    }
                }
            });            

            this.GridBooks.getColumnModel().getColumn(0).setMinWidth(60);
            this.GridBooks.getColumnModel().getColumn(0).setMaxWidth(60);
            this.GridBooks.getColumnModel().getColumn(0).setWidth(60);
            
            this.GridBooks.getColumnModel().getColumn(4).setMinWidth(70);
            this.GridBooks.getColumnModel().getColumn(4).setMaxWidth(70);
            this.GridBooks.getColumnModel().getColumn(4).setWidth(70);
            this.GridBooks.getColumnModel().getColumn(5).setMinWidth(70);
            this.GridBooks.getColumnModel().getColumn(5).setMaxWidth(70);
            this.GridBooks.getColumnModel().getColumn(5).setWidth(70);


            if (_selectrow)
            {
                this.ButInsert.setEnabled(false);
                this.ButCheng.setEnabled(false);
                this.DeleteButtom.setEnabled(false);
                this.CopiesButton.setEnabled(false);
            }

        }
        catch(DataException  ex )
        {
            String mes = ex.getMessage()+"\n"+ex.getCause().getMessage(); 
            MsgBox.error(mes,ex.getMessage());
        }
    }

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Btselect;
    private javax.swing.JButton ButCheng;
    private javax.swing.JButton ButFind;
    private javax.swing.JButton ButInsert;
    private javax.swing.JButton CopiesButton;
    private javax.swing.JButton DeleteButtom;
    private javax.swing.JTable GridBooks;
    private javax.swing.JScrollPane Table_Books;
    private javax.swing.JTextField TxtAuthor;
    private javax.swing.JTextField TxtCategory;
    private javax.swing.JTextField TxtTitle;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables
}
