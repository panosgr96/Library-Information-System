package java_universitylibrary_db;
import java.sql.ResultSet;
import java.sql.SQLException;
public class BbooksAuthorUPD extends PopUpJpanel {
    private int _AuthorID =0;
    public BbooksAuthorUPD() {
        initComponents();
        AddToDropDown();
        this.TXTISBN.setEditable(false);        
    }
    public void setAuthorID(int AuthorID)
    {
        this._AuthorID = AuthorID;
    }
    public int getAuthorID()
    {
       return this._AuthorID;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SaveButton = new javax.swing.JToggleButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        TXTISBN = new javax.swing.JTextField();
        CanselButton = new javax.swing.JToggleButton();
        DRAuthor = new javax.swing.JComboBox();
        CategoryButton = new javax.swing.JToggleButton();

        addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                formAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        SaveButton.setText("Save");
        SaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveButtonActionPerformed(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("A/A :");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Συγγραφέας :");

        CanselButton.setText("Cansel");
        CanselButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CanselButtonActionPerformed(evt);
            }
        });

        CategoryButton.setText("Εισαγωγή Συγγραφέα");
        CategoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CategoryButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TXTISBN, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DRAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(40, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(CategoryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(SaveButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(CanselButton)
                        .addGap(20, 20, 20))))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel1, jLabel2});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TXTISBN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DRAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SaveButton)
                    .addComponent(CanselButton)
                    .addComponent(CategoryButton))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
       
    
    
    
    private void SaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveButtonActionPerformed
       CoboBoxItem itm =(CoboBoxItem)this.DRAuthor.getSelectedItem();
       if (this.getAction() == PopUpJpanel.FormActionType.Insert)
       {
         ConnectDb con = new ConnectDb();
          String sql ="INSERT INTO books_author( ISBN, AUTHORID) ";
                 sql+= "VALUES ("+this.getPKValue()+","+itm.getValue().trim()+")";
            try{
                con.UpdateQuery(sql);
                con.Close();
            }
            catch(DataException ex )
            {
                String mes = ex.getMessage()+"\n"+ex.getCause().getMessage(); 
                MsgBox.error(mes,ex.getMessage());
            }                 
        }
       if (this.getAction() == PopUpJpanel.FormActionType.Update)
       {
         ConnectDb con = new ConnectDb();
          String sql ="UPDATE books_author SET AUTHORID = "+ itm.getValue().trim()+" \n" +
                "WHERE ISBN = "+this.getPKValue() +" AND AUTHORID=" +this.getAuthorID() ;
            try{
                con.UpdateQuery(sql);
                con.Close();
            }
            catch(DataException ex )
            {
                String mes = ex.getMessage()+"\n"+ex.getCause().getMessage(); 
                MsgBox.error(mes,ex.getMessage());
            }                 
        }
       if (this.getAction() == PopUpJpanel.FormActionType.Delete)
       {
         ConnectDb con = new ConnectDb();
          String sql ="DELETE FROM books_author WHERE ISBN = "+this.getPKValue()+" AND AUTHORID = " +this.getAuthorID();
            try{
                con.UpdateQuery(sql);
                con.Close();
            }
            catch(DataException ex )
            {
                String mes = ex.getMessage()+"\n"+ex.getCause().getMessage(); 
                MsgBox.error(mes,ex.getMessage());
            }                 
        }
        this.getPopupWin().actionPerformed(evt);
    }//GEN-LAST:event_SaveButtonActionPerformed

    private void CanselButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CanselButtonActionPerformed
        this.getPopupWin().actionPerformed(evt);
    }//GEN-LAST:event_CanselButtonActionPerformed

    private void formAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_formAncestorAdded
        this.TXTISBN.setText(this.getPKValue());
        ConnectDb con = new ConnectDb();
        String sql = "SELECT ISBN, AUTHORID FROM books_author WHERE ISBN = ? AND AUTHORID =?";
        String[] parameter = new String[2];
        parameter[0] = this.getPKValue();
        parameter[1] =String.valueOf(this.getAuthorID());
        try{
            ResultSet rs =  con.ExecuteQuery(sql,parameter);
            while(rs.next()){
              for (int i=0;i <this.DRAuthor.getItemCount(); i++)
              {
                 if (Integer.parseInt(((CoboBoxItem)this.DRAuthor.getItemAt(i)).getValue()) == Integer.parseInt(rs.getString("AUTHORID").toString()))
                 {
                    this.DRAuthor.setSelectedIndex(i);
                     break;
                 }
              }
            }
            con.Close();
        }
        catch(DataException |SQLException  ex )
        {
            String mes = ex.getMessage()+"\n"+ex.getCause().getMessage(); 
            MsgBox.error(mes,ex.getMessage());
        }   
        if (this.getAction() == PopUpJpanel.FormActionType.Delete)
       {
          this.DRAuthor.setEditable(false);
          this.DRAuthor.setEnabled(false);
       }
    }//GEN-LAST:event_formAncestorAdded

    private void CategoryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CategoryButtonActionPerformed
        Authors cat = new Authors();
        cat.setAction(PopUpJpanel.FormActionType.Display);
        PopUpMondalWindow ppp = new PopUpMondalWindow(this,"Συγγραφεις",cat);
        ppp.setSize(250, 200);
        AddToDropDown();
        
    }//GEN-LAST:event_CategoryButtonActionPerformed

    private void AddToDropDown(){
        ConnectDb con = new ConnectDb();
        String sql = "SELECT AUTHORID, NAME FROM AUTHOR";
        try{
            ResultSet rs =  con.ExecuteQuery(sql);
            this.DRAuthor.removeAllItems();
            while(rs.next()){
                this.DRAuthor.addItem(new CoboBoxItem(rs.getString("AUTHORID"), rs.getString("NAME")));
            }
            con.Close();
        }
        catch(DataException |SQLException  ex )
        {
            String mes = ex.getMessage()+"\n"+ex.getCause().getMessage(); 
            
            MsgBox.error(mes,ex.getMessage());
        }
    }
 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton CanselButton;
    private javax.swing.JToggleButton CategoryButton;
    private javax.swing.JComboBox DRAuthor;
    private javax.swing.JToggleButton SaveButton;
    private javax.swing.JTextField TXTISBN;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
